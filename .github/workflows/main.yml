# This is a basic workflow that is manually triggered
Î» cat main.tf
##########################################################
#Hybrid_Multi_Cloud
#Task_1 : This below code is to create and launch Application using Terraform over the AWS cloud
#
#1. Create the key and security group which allow the port 80.
#2. Launch EC2 instance.
#3. In this Ec2 instance use the key and security group which we have created in step 1.
#4. Launch one Volume (EBS) and mount that volume into /var/www/html
#5. Developer have uploded the code into github repo also the repo has some images.
#6. Copy the github repo code into /var/www/html
#7. Create S3 bucket, and copy/deploy the images from github repo into the s3 bucket and change the permission to public readable.
#8 Create a Cloudfront using s3 bucket(which contains images) and use the Cloudfront URL to update in code in /var/www/html
#righteducation #rightmentor #makingindiafutureready
#hybridmulticloud #futureofcloudcomputing #vimaldaga
#terraform #github #s3 #cloudfront #terraform
#pdf download:- github link:
#key.tf file:- github link:
################################################################
provider "aws" {
region = "ap-south-1"
profile = "pawan"
}

resource "aws_key_pair" "deployer-key" {
  key_name   = "deployer-key"
  public_key = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD3F6tyPEFEzV0LX3X8BsXdMsQz1x2cEikKDEY0aIj41qgxMCP/iteneqXSIFZBp5vizPvaoIR3Um9xK7PGoW8giupGn+EPuxIA4cDM4vzOqOkiMPhz5XK0whEjkVzTo4+S0puvDZuwIsdiW9mxhJc7tgBNL0cYlWSYVkz4G/fslNfRPW5mYAM49f4fhtxPb5ok4Q2Lg9dPKVHO/Bgeu5woMc7RY0p1ej6D4CKFE6lymSDJpW0YHX/wqE9+cfEauh7xZcG0q9t2ta6F6fmX0agvpFyZo8aFbXeUBr7osSCJNgvavWbM/06niWrOvYX2xwWdhXmXSrbX8ZbabVohBK41 email@example.com"
}

resource "aws_security_group" "allow_ssh_http" {
  name        = "allow_ssh_http"
  description = "Allow SSH and HTTP inbound traffic"
  vpc_id      = "vpc-ef968b87"

  ingress {
    description = "TLS from SSH"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    description = "TLS from HTTP"
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "allow_ssh_http"
  }
}

resource "aws_ebs_volume" "my-ebs" {
  availability_zone = "ap-south-1a"
  size              = 1
  tags = {
    Name = "my-ebs"
  }
}
resource "aws_volume_attachment" "volume-attach" {
 device_name = "/dev/sdf"
 volume_id = "$aws_ebs_volume.my-ebs.id"
 instance_id = "$aws_instance.my-instance.id"
}
resource "aws_instance" "my-instance" {
  ami           = "ami-052c08d70def0ac62"
  instance_type = "t2.micro"
  availability_zone = "ap-south-1a"
  key_name      = "deployer-key"
  security_groups = [ "sg-1" ]
  user_data = <<-EOF
                #! /bin/bash
                sudo yum install httpd -y
                sudo systemctl start httpd
                sudo systemctl enable httpd
                sudo yum install git -y
                mkfs.ext4 /dev/xvdf1
                mount /dev/xvdf1 /var/www/html
                cd /var/www/html
                git clone https://github.com/pawankulaura/hybridmulticloud-task1


  EOF

  tags = {
    Name = "my-instance"
  }
}
